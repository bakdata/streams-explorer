name: CI

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest
    env:
      working-directory: ./backend
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install packages
        run: sudo apt-get -y install python3-dev graphviz libgraphviz-dev pkg-config python3-wheel

      - name: Run poetry image
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.12

      - name: Set poetry virtualenv
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.working-directory }}/.venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('backend/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: timeout 10s python -m poetry run pip --version || rm -rf .venv
        working-directory: ${{ env.working-directory }}

      - name: Install dependencies
        run: poetry install --no-interaction
        working-directory: ${{ env.working-directory }}

      - name: Lint (flake8)
        run: poetry run pre-commit run flake8 --all-files --show-diff-on-failure
        working-directory: ${{ env.working-directory }}

      - name: Order of imports (isort)
        run: poetry run pre-commit run isort --all-files --show-diff-on-failure
        working-directory: ${{ env.working-directory }}

      - name: Formatting (black)
        run: poetry run pre-commit run black --all-files --show-diff-on-failure
        working-directory: ${{ env.working-directory }}

      - name: Typing (mypy)
        run: poetry run pre-commit run mypy --all-files
        working-directory: ${{ env.working-directory }}

      - name: Test
        run: poetry run pytest tests
        working-directory: ${{ env.working-directory }}

  frontend:
    runs-on: ubuntu-latest
    env:
      working-directory: ./frontend
    strategy:
      fail-fast: false
      matrix:
        node-version: ["16"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ${{ env.working-directory }}/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.working-directory }}

      - name: Lint
        run: npm run lint
        working-directory: ${{ env.working-directory }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install pre-commit
        run: python -m pip install pre-commit

      - name: Formatting (prettier)
        run: pre-commit run prettier --all-files
        working-directory: ${{ env.working-directory }}

      - name: Fetchers
        run: pre-commit run generate-fetchers --all-files
        working-directory: ${{ env.working-directory }}

      - name: Run Tests
        run: npm run test:ci
        working-directory: ${{ env.working-directory }}
