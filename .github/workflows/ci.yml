name: CI

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest
    env:
      backend: ./backend
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        poetry-version: ["1.1.12"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Run poetry image
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Set poetry virtualenv
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          sudo apt-get -y install python3-dev graphviz libgraphviz-dev pkg-config python3-wheel
          poetry install --no-interaction
        working-directory: ${{ env.backend }}

      - name: Lint (flake8)
        run: poetry run pre-commit run flake8 --all-files --show-diff-on-failure
        working-directory: ${{ env.backend }}

      - name: Order of imports (isort)
        run: poetry run pre-commit run isort --all-files --show-diff-on-failure
        working-directory: ${{ env.backend }}

      - name: Formatting (black)
        run: poetry run pre-commit run black --all-files --show-diff-on-failure
        working-directory: ${{ env.backend }}

      - name: Typing (mypy)
        run: poetry run pre-commit run mypy --all-files
        working-directory: ${{ env.backend }}

      - name: Test
        run: poetry run pytest tests
        working-directory: ${{ env.backend }}
